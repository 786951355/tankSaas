apply plugin: 'com.android.application'

def cfg = rootProject.ext.android
def appId = rootProject.ext.appId

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId appId["app"]
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        if (isDebug.toBoolean()) {//用于测试版的bugly的更新
            versionCode 1
            versionName "1.0.0.0.beta"
        } else {
            versionCode cfg.versionCode
            versionName cfg.versionName
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        debug {
            storeFile file("../saasKey")
            storePassword "Zhao2017guanche"
            keyAlias "guangaun"
            keyPassword "guanguan"
        }
        release {
            storeFile file("../saasKey")
            storePassword "Zhao2017guanche"
            keyAlias "saas"
            keyPassword "saasapp"
        }
    }

    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled false
//            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            applicationIdSuffix '.inhouse'
            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.tanker.saas.driver.inhouse",
                    JPUSH_APPKEY : "05ae49c91a6afd797af49b6d", //JPush上注册的包名对应的appkey(罐罐测试).
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
        }

        release {
            shrinkResources true
            minifyEnabled true
//            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.tanker.saas.driver",
                    JPUSH_APPKEY : "eb9799e6d6ef8e7e6f257761", //JPush上注册的包名对应的appkey(罐罐).正式Key
                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]

        }
    }
    sourceSets {
        main {
            if (isModuleRun.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //release 时 debug 目录下文件不需要合并到主工程
                    exclude '**/debug/**'
                }
            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    aaptOptions {
        cruncherEnabled = false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//编译期组件隔离，运行期组件按需依赖
//mainModule需要跟minemodule、graborder进行交互，所以在运行期添加了依赖
if (!isModuleRun.toBoolean()) {
    //获取当前运行的task
    def tasks = project.gradle.startParameter.taskNames
    for (String task : tasks) {
        def upperName = task.toUpperCase()
        //判断task是编译期还是运行期
        if (upperName.contains("ASSEMBLE") || upperName.contains("INSTALL")) {
            dependencies.add("implementation", project.project(':' + 'homemodule'))
            dependencies.add("implementation", project.project(':' + 'settingmodule'))
            dependencies.add("implementation", project.project(':' + 'loginmodule'))
            dependencies.add("implementation", project.project(":" + 'ordersmodule'))
            dependencies.add("implementation", project.project(":" + 'workbenchmodule'))
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation project(path: ':resmodule')
    implementation project(path: ':basemodule')
}
